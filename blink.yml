blueprint:
  name: Smart Lock Blink-Bestätigung
  description: >
    Wenn das Smart Lock entriegelt (unlocked) oder verriegelt (locked) wird,
    blinkt die gewählte Lampe zweimal in der entsprechenden Farbe.
  domain: automation
  input:
    smart_lock:
      name: Smart Lock
      selector:
        entity:
          domain: lock
    light_target:
      name: Lampe
      selector:
        entity:
          domain: light
    unlock_color:
      name: Farbe bei Entriegeln (unlocked)
      default: [0,255,0] # Grün
      selector:
        color_rgb: {}
    lock_color:
      name: Farbe bei Verriegeln (locked)
      default: [255,0,0] # Rot
      selector:
        color_rgb: {}
    blink_brightness:
      name: Blink-Helligkeit
      default: 255
      selector:
        number:
          min: 50
          max: 255
          step: 5
    blink_duration:
      name: Dauer pro Blink (Sekunden)
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5
          step: 0.1

trigger:
  - platform: state
    entity_id: !input smart_lock
    to: "locked"
  - platform: state
    entity_id: !input smart_lock
    to: "unlocked"

action:
  - variables:
      light_entity: !input light_target
      unlock_color: !input unlock_color
      lock_color: !input lock_color
      blink_brightness: !input blink_brightness
      blink_duration: !input blink_duration
      trigger_to: "{{ trigger.to_state.state }}"

  - choose:
      - conditions: "{{ trigger_to == 'unlocked' }}"
        sequence:
          - repeat:
              count: 2
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light_target
                  data:
                    rgb_color: !input unlock_color
                    brightness: "{{ blink_brightness }}"
                - delay:
                    seconds: "{{ blink_duration }}"
                - service: light.turn_off
                  target:
                    entity_id: !input light_target
                - delay:
                    seconds: "{{ blink_duration }}"
      - conditions: "{{ trigger_to == 'locked' }}"
        sequence:
          - repeat:
              count: 2
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light_target
                  data:
                    rgb_color: !input lock_color
                    brightness: "{{ blink_brightness }}"
                - delay:
                    seconds: "{{ blink_duration }}"
                - service: light.turn_off
                  target:
                    entity_id: !input light_target
                - delay:
                    seconds: "{{ blink_duration }}"

mode: restart